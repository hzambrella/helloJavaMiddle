<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
   http://www.springframework.org/schema/beans     
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context-3.0.xsd
   http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<context:component-scan base-package="com.hz" />
	<!-- <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"> 
		<property name="interceptors"> <list> <ref bean="simpleFilter"/> </list> 
		</property> </bean> -->
		
	<!-- 过滤器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/**" />
			<bean class="com.hz.springFilter.SimpleFilter"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>
	
	<!-- 处理jsp的渲染器 -->
	<bean id="internalResourceViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize">
			<value>55242880
			</value>
		</property>
	</bean>
	
	<!-- 静态文件，webapp为根目录,不知道为何会和正常的请求冲突 -->
	<!-- if some one tell me why it effect normal request ,I great thanks!!! -->
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/js/**" location="/js/" />

	<!-- 非注解的控制器 -->
	<!-- <bean name="/hello" class="com.hz.springMVC.HelloController"></bean> -->
	<!-- <bean name="/beanMVC" class="com.hz.springMVC.HelloBeanMVC"></bean> -->
	<!-- <bean name="simpleFilter" class="com.hz.springFilter.simpleFilter"></bean> -->

</beans>