package proxy;

import static org.junit.Assert.*;
import net.sf.cglib.proxy.Enhancer;
import net.sf.cglib.proxy.Proxy;

import org.junit.Test;

public class TestTargetProxyCglib {
	
	@Test
	public void test1() {
		TargetBusiness target=new TargetBusiness();
		TargetProxyCglibInterceptor proxyCglib=new TargetProxyCglibInterceptor(target);
		//动态地返回代理对象TargetBusiness，父类引用指向子类对象。
		TargetBusiness tb=(TargetBusiness) proxyCglib.createProxy();
		tb.business();
		tb.business2();
	}
	
	@Test
	public void test2(){
		TargetBusiness target=new TargetBusiness();
		 Enhancer enhancer =new Enhancer();  
	        enhancer.setSuperclass(TargetBusiness.class);
		TargetCglibCallbackFilter tf=new TargetCglibCallbackFilter();
	}

}
